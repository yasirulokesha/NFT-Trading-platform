{"ast":null,"code":"var _jsxFileName = \"/Users/yasirulokesha/Documents/GitHub/Innovation_project/src/context/TransactionContext.js\";\nimport React, { createContext, useEffect, useState } from 'react';\nimport { providers } from \"ethers\";\nimport { contractABI, contractAddress } from \"../Utils/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TransactionsContext = /*#__PURE__*/createContext();\nconst {\n  ethereum\n} = window;\nconst getEthereumContract = () => {\n  const provider = new ethers.providers.Web3Provider(ethereum);\n  const signer = provider.getSigner();\n  const transactionsContract = new ethers.Contract(contractAddress, contractABI, signer);\n  console.log({\n    provider,\n    signer,\n    transactionsContract\n  });\n};\nexport const TransactionsProvider = ({\n  children\n}) => {\n  return /*#__PURE__*/_jsxDEV(TransactionsContext.Provider, {\n    value: {},\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_c = TransactionsProvider;\nvar _c;\n$RefreshReg$(_c, \"TransactionsProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","providers","contractABI","contractAddress","jsxDEV","_jsxDEV","TransactionsContext","ethereum","window","getEthereumContract","provider","ethers","Web3Provider","signer","getSigner","transactionsContract","Contract","console","log","TransactionsProvider","children","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yasirulokesha/Documents/GitHub/Innovation_project/src/context/TransactionContext.js"],"sourcesContent":["import React, { createContext, useEffect, useState } from 'react'\nimport {  providers } from \"ethers\";\n\nimport { contractABI, contractAddress } from \"../Utils/constants\";\n\n\nexport const TransactionsContext = createContext();\n\nconst { ethereum } = window;\n\nconst getEthereumContract = () => {\n    const provider = new ethers.providers.Web3Provider(ethereum);\n    const signer = provider.getSigner();\n    const transactionsContract = new ethers.Contract(contractAddress, contractABI, signer);\n\n    console.log({\n        provider,\n        signer,\n        transactionsContract\n    });\n}\n\n\nexport const TransactionsProvider = ({ children }) => {\n    return (\n        <TransactionsContext.Provider value={{}}>\n            {children}\n        </TransactionsContext.Provider>\n    )\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACjE,SAAUC,SAAS,QAAQ,QAAQ;AAEnC,SAASC,WAAW,EAAEC,eAAe,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGlE,OAAO,MAAMC,mBAAmB,gBAAGR,aAAa,CAAC,CAAC;AAElD,MAAM;EAAES;AAAS,CAAC,GAAGC,MAAM;AAE3B,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAC9B,MAAMC,QAAQ,GAAG,IAAIC,MAAM,CAACV,SAAS,CAACW,YAAY,CAACL,QAAQ,CAAC;EAC5D,MAAMM,MAAM,GAAGH,QAAQ,CAACI,SAAS,CAAC,CAAC;EACnC,MAAMC,oBAAoB,GAAG,IAAIJ,MAAM,CAACK,QAAQ,CAACb,eAAe,EAAED,WAAW,EAAEW,MAAM,CAAC;EAEtFI,OAAO,CAACC,GAAG,CAAC;IACRR,QAAQ;IACRG,MAAM;IACNE;EACJ,CAAC,CAAC;AACN,CAAC;AAGD,OAAO,MAAMI,oBAAoB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAClD,oBACIf,OAAA,CAACC,mBAAmB,CAACe,QAAQ;IAACC,KAAK,EAAE,CAAC,CAAE;IAAAF,QAAA,EACnCA;EAAQ;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACiB,CAAC;AAEvC,CAAC;AAAAC,EAAA,GANYR,oBAAoB;AAAA,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}