{"ast":null,"code":"var _jsxFileName = \"/Users/yasirulokesha/Documents/GitHub/Innovation_project/src/Components/UploadForm.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport FormControl from '@mui/material/FormControl';\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport Switch from '@mui/material/Switch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AssestUpload() {\n  _s();\n  const [open, setOpen] = React.useState(true);\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('md');\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleMaxWidthChange = event => {\n    setMaxWidth(\n    // @ts-expect-error autofill of arbitrary value is not handled.\n    event.target.value);\n  };\n  const handleFullWidthChange = event => {\n    setFullWidth(event.target.checked);\n  };\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    fullWidth: fullWidth,\n    maxWidth: maxWidth,\n    open: open,\n    onClose: handleClose,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Optional sizes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n        children: \"You can set my maximum width and whether to adapt or not.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        noValidate: true,\n        component: \"form\",\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          m: 'auto',\n          width: 'fit-content'\n        },\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          sx: {\n            mt: 2,\n            minWidth: 120\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            component: \"label\",\n            variant: \"contained\",\n            startIcon: /*#__PURE__*/_jsxDEV(CloudUploadIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 82\n            }, this),\n            children: [\"Upload file\", /*#__PURE__*/_jsxDEV(VisuallyHiddenInput, {\n              type: \"file\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(AssestUpload, \"Ia5XHm7yPkt/IPD4VaNvuA2W6Sk=\");\n_c = AssestUpload;\nvar _c;\n$RefreshReg$(_c, \"AssestUpload\");","map":{"version":3,"names":["axios","React","Box","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","FormControl","CloudUploadIcon","FormControlLabel","InputLabel","MenuItem","Select","Switch","jsxDEV","_jsxDEV","AssestUpload","_s","open","setOpen","useState","fullWidth","setFullWidth","maxWidth","setMaxWidth","handleClickOpen","handleClose","handleMaxWidthChange","event","target","value","handleFullWidthChange","checked","onClose","children","fileName","_jsxFileName","lineNumber","columnNumber","noValidate","component","sx","display","flexDirection","m","width","mt","minWidth","variant","startIcon","VisuallyHiddenInput","type","onClick","_c","$RefreshReg$"],"sources":["/Users/yasirulokesha/Documents/GitHub/Innovation_project/src/Components/UploadForm.js"],"sourcesContent":["import axios from 'axios'\n\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport FormControl from '@mui/material/FormControl';\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport Switch from '@mui/material/Switch';\n\nexport default function AssestUpload() {\n    const [open, setOpen] = React.useState(true);\n    const [fullWidth, setFullWidth] = React.useState(true);\n    const [maxWidth, setMaxWidth] = React.useState('md');\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleMaxWidthChange = (event) => {\n        setMaxWidth(\n            // @ts-expect-error autofill of arbitrary value is not handled.\n            event.target.value,\n        );\n    };\n\n    const handleFullWidthChange = (event) => {\n        setFullWidth(event.target.checked);\n    };\n\n    return (\n        <Dialog\n            fullWidth={fullWidth}\n            maxWidth={maxWidth}\n            open={open}\n            onClose={handleClose}\n        >\n            <DialogTitle>Optional sizes</DialogTitle>\n            <DialogContent>\n                <DialogContentText>\n                    You can set my maximum width and whether to adapt or not.\n                </DialogContentText>\n                <Box\n                    noValidate\n                    component=\"form\"\n                    sx={{\n                        display: 'flex',\n                        flexDirection: 'column',\n                        m: 'auto',\n                        width: 'fit-content',\n                    }}\n                >\n                    <FormControl sx={{ mt: 2, minWidth: 120 }}>\n                        <Button component=\"label\" variant=\"contained\" startIcon={<CloudUploadIcon />}>\n                            Upload file\n                            <VisuallyHiddenInput type=\"file\" />\n                        </Button>\n                        {/* <InputLabel htmlFor=\"max-width\">maxWidth</InputLabel>\n              <Select\n                autoFocus\n                value={maxWidth}\n                onChange={handleMaxWidthChange}\n                label=\"maxWidth\"\n                inputProps={{\n                  name: 'max-width',\n                  id: 'max-width',\n                }}\n              >\n                <MenuItem value={false}>false</MenuItem>\n                <MenuItem value=\"xs\">xs</MenuItem>\n                <MenuItem value=\"sm\">sm</MenuItem>\n                <MenuItem value=\"md\">md</MenuItem>\n                <MenuItem value=\"lg\">lg</MenuItem>\n                <MenuItem value=\"xl\">xl</MenuItem>\n              </Select> */}\n                    </FormControl>\n                    {/* <FormControlLabel\n              sx={{ mt: 1 }}\n              control={\n                <Switch checked={fullWidth} onChange={handleFullWidthChange} />\n              }\n              label=\"Full width\"\n            /> */}\n                </Box>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose}>Close</Button>\n            </DialogActions>\n        </Dialog>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}