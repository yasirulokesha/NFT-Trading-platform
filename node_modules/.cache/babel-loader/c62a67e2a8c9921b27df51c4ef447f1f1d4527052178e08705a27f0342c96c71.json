{"ast":null,"code":"var _jsxFileName = \"/Users/yasirulokesha/Documents/GitHub/Innovation_project/src/Pages/Login.js\",\n  _s = $RefreshSig$();\nimport styled from '@emotion/styled';\nimport { Button, Container, IconButton, InputAdornment, OutlinedInput, Paper, Stack, Typography } from '@mui/material';\nimport React, { useState } from 'react';\nimport TextField from '@mui/material/TextField';\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\nimport { useNavigate } from 'react-router-dom';\nimport { fetchToken, setToken } from '../Auth';\nimport axios from 'axios';\n\n// Login form styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginWrap = styled(Paper)(({\n  theme\n}) => ({\n  borderRadius: 20,\n  width: '100%',\n  maxWidth: 500,\n  display: 'flex',\n  alignItems: 'center',\n  padding: 5,\n  paddingLeft: 0,\n  paddingRight: 0,\n  justifyContent: 'center',\n  flexDirection: 'column',\n  flexWrap: 'nowrap'\n}));\n\n// Export the login UI \n_c = LoginWrap;\nexport default function Login() {\n  _s();\n  // Get Password and Username\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  // Forward in successfull\n  const navigate = useNavigate();\n\n  // Checking filled password and username\n  const login = () => {\n    if (username === \"\" && password === \"\") {\n      return;\n    } else {\n      let data = JSON.stringify({\n        \"email\": username,\n        \"password\": password\n      });\n      axios.post(\"http://localhost:8000/login\", {\n        username: username,\n        password: password\n      }).then(function (response) {\n        console.log(response.data.token, \"response.data.token\");\n        if (response.data.token) {\n          setToken(response.data.token);\n          navigate(\"/profile\");\n        }\n      }).catch(function (error) {\n        console.log(error, \"error\");\n      });\n    }\n  };\n  const [showPassword, setShowPassword] = React.useState(false);\n  const handleClickShowPassword = () => setShowPassword(show => !show);\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: {\n      height: '80vh',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      marginTop: 4\n    },\n    fixed: true,\n    children: /*#__PURE__*/_jsxDEV(LoginWrap, {\n      elevation: 24,\n      children: fetchToken() ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You are already logged in.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Stack, {\n        sx: {\n          width: '100%',\n          maxWidth: '400px'\n        },\n        mt: 3,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          pl: 1,\n          fontWeight: 600,\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-multiline-flexible\",\n          multiline: true,\n          maxRows: 4,\n          sx: {\n            marginTop: 1,\n            marginBottom: 2,\n            padding: 2\n          },\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          pl: 1,\n          fontWeight: 600,\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n          sx: {\n            margin: 2\n          },\n          type: showPassword ? 'text' : 'password',\n          endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"end\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": \"toggle password visibility\",\n              onClick: handleClickShowPassword,\n              onMouseDown: handleMouseDownPassword,\n              edge: \"end\",\n              children: showPassword ? /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 57\n              }, this) : /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 77\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 33\n          }, this),\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: login,\n          sx: {\n            width: 'min-content',\n            marginTop: 2,\n            marginBottom: 6,\n            marginLeft: 2\n          },\n          variant: \"outlined\",\n          href: \"/profile\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"YHPGpFUbrDjp4HIyHSrE97o74Q0=\", false, function () {\n  return [useNavigate];\n});\n_c2 = Login;\nvar _c, _c2;\n$RefreshReg$(_c, \"LoginWrap\");\n$RefreshReg$(_c2, \"Login\");","map":{"version":3,"names":["styled","Button","Container","IconButton","InputAdornment","OutlinedInput","Paper","Stack","Typography","React","useState","TextField","Visibility","VisibilityOff","useNavigate","fetchToken","setToken","axios","jsxDEV","_jsxDEV","LoginWrap","theme","borderRadius","width","maxWidth","display","alignItems","padding","paddingLeft","paddingRight","justifyContent","flexDirection","flexWrap","_c","Login","_s","username","setUsername","password","setPassword","navigate","login","data","JSON","stringify","post","then","response","console","log","token","catch","error","showPassword","setShowPassword","handleClickShowPassword","show","handleMouseDownPassword","event","preventDefault","sx","height","marginTop","fixed","children","elevation","fileName","_jsxFileName","lineNumber","columnNumber","mt","pl","fontWeight","id","multiline","maxRows","marginBottom","onChange","e","target","value","margin","type","endAdornment","position","onClick","onMouseDown","edge","marginLeft","variant","href","_c2","$RefreshReg$"],"sources":["/Users/yasirulokesha/Documents/GitHub/Innovation_project/src/Pages/Login.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Button, Container, IconButton, InputAdornment, OutlinedInput, Paper, Stack, Typography } from '@mui/material';\nimport React, { useState } from 'react';\nimport TextField from '@mui/material/TextField';\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\nimport { useNavigate } from 'react-router-dom';\nimport { fetchToken, setToken } from '../Auth';\n\nimport axios from 'axios';\n\n// Login form styles\nconst LoginWrap = styled(Paper)(({ theme }) => ({\n    borderRadius: 20,\n    width: '100%',\n    maxWidth: 500,\n    display: 'flex',\n    alignItems: 'center',\n    padding: 5,\n    paddingLeft: 0,\n    paddingRight: 0,\n    justifyContent: 'center',\n    flexDirection: 'column',\n    flexWrap: 'nowrap',\n}))\n\n// Export the login UI \nexport default function Login() {\n\n    // Get Password and Username\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    // Forward in successfull\n    const navigate = useNavigate();\n\n    // Checking filled password and username\n    const login = () => {\n        if ((username === \"\") && (password === \"\")) {\n            return;\n        } else {\n            let data = JSON.stringify({\n                \"email\": username,\n                \"password\": password\n            })\n            axios\n                .post(\"http://localhost:8000/login\", {\n                    username: username,\n                    password: password,\n                })\n                .then(function (response) {\n                    console.log(response.data.token, \"response.data.token\");\n                    if (response.data.token) {\n                        setToken(response.data.token);\n                        navigate(\"/profile\");\n                    }\n                })\n                .catch(function (error) {\n                    console.log(error, \"error\");\n                });\n        }\n    }\n\n    const [showPassword, setShowPassword] = React.useState(false);\n\n    const handleClickShowPassword = () => setShowPassword((show) => !show);\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    return (\n        <Container sx={{\n            height: '80vh',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            marginTop: 4\n        }} fixed>\n            <LoginWrap elevation={24}>\n                {fetchToken() ? (\n                    <p>You are already logged in.</p>\n                ) : (\n                    <Stack sx={{ width: '100%', maxWidth: '400px' }} mt={3}>\n                        <Typography pl={1} fontWeight={600}>Username</Typography>\n                        <TextField\n                            id=\"outlined-multiline-flexible\"\n                            multiline\n                            maxRows={4}\n                            sx={{\n                                marginTop: 1,\n                                marginBottom: 2,\n                                padding: 2\n                            }}\n                            onChange={(e) => setUsername(e.target.value)}\n                        />\n                        <Typography pl={1} fontWeight={600}>Password</Typography>\n                        <OutlinedInput\n                            sx={{\n                                margin: 2\n                            }}\n                            type={showPassword ? 'text' : 'password'}\n                            endAdornment={\n                                <InputAdornment position=\"end\">\n                                    <IconButton\n                                        aria-label=\"toggle password visibility\"\n                                        onClick={handleClickShowPassword}\n                                        onMouseDown={handleMouseDownPassword}\n                                        edge=\"end\"\n                                    >\n                                        {showPassword ? <VisibilityOff /> : <Visibility />}\n                                    </IconButton>\n                                </InputAdornment>\n                            }\n                            onChange={(e) => setPassword(e.target.value)}\n                        />\n                        <Button onClick={login} sx={{ width: 'min-content', marginTop: 2, marginBottom: 6, marginLeft: 2 }} variant=\"outlined\" href=\"/profile\">\n                            Login\n                        </Button>\n                    </Stack>\n                )}\n            </LoginWrap>\n        </Container>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}