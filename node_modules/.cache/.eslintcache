[{"/Users/yasirulokesha/Documents/GitHub/Innovation_project/src/index.js":"1","/Users/yasirulokesha/Documents/GitHub/Innovation_project/src/App.js":"2","/Users/yasirulokesha/Documents/GitHub/Innovation_project/src/reportWebVitals.js":"3","/Users/yasirulokesha/Documents/GitHub/Innovation_project/src/Components/Header.js":"4","/Users/yasirulokesha/Documents/GitHub/Innovation_project/src/Components/Footer.js":"5","/Users/yasirulokesha/Documents/GitHub/Innovation_project/src/Components/Components.js":"6","/Users/yasirulokesha/Documents/GitHub/Innovation_project/src/Pages/Profile.js":"7","/Users/yasirulokesha/Documents/GitHub/Innovation_project/src/Pages/AssestOverview.js":"8","/Users/yasirulokesha/Documents/GitHub/Innovation_project/src/Pages/Landing.js":"9","/Users/yasirulokesha/Documents/GitHub/Innovation_project/src/Pages/Login.js":"10","/Users/yasirulokesha/Documents/GitHub/Innovation_project/src/Auth.js":"11","/Users/yasirulokesha/Documents/GitHub/Innovation_project/src/setupTests.js":"12","/Users/yasirulokesha/Documents/GitHub/Innovation_project/src/Pages/CreateAccount.js":"13","/Users/yasirulokesha/Documents/GitHub/Innovation_project/src/Components/UploadForm.js":"14","/Users/yasirulokesha/Documents/GitHub/Innovation_project/src/Components/Firebase.js":"15","/Users/yasirulokesha/Documents/GitHub/Innovation_project/src/Pages/SearchResults.js":"16"},{"size":506,"mtime":1693119190049,"results":"17","hashOfConfig":"18"},{"size":1807,"mtime":1697331056174,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1692099529706,"results":"20","hashOfConfig":"18"},{"size":3635,"mtime":1697282859439,"results":"21","hashOfConfig":"18"},{"size":2667,"mtime":1693642640447,"results":"22","hashOfConfig":"18"},{"size":4641,"mtime":1697331097540,"results":"23","hashOfConfig":"18"},{"size":12863,"mtime":1697334452857,"results":"24","hashOfConfig":"18"},{"size":4621,"mtime":1697331150465,"results":"25","hashOfConfig":"18"},{"size":7719,"mtime":1697326985546,"results":"26","hashOfConfig":"18"},{"size":5680,"mtime":1697089901319,"results":"27","hashOfConfig":"18"},{"size":487,"mtime":1696992559964,"results":"28","hashOfConfig":"18"},{"size":241,"mtime":1692099529706,"results":"29","hashOfConfig":"30"},{"size":6012,"mtime":1697327771754,"results":"31","hashOfConfig":"18"},{"size":9449,"mtime":1697256483654,"results":"32","hashOfConfig":"18"},{"size":734,"mtime":1697249269603,"results":"33","hashOfConfig":"18"},{"size":1027,"mtime":1697288470440,"results":"34","hashOfConfig":"18"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"texho",{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":4,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jgpxdn",{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"38"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"87","usedDeprecatedRules":"38"},"/Users/yasirulokesha/Documents/GitHub/Innovation_project/src/index.js",[],[],[],"/Users/yasirulokesha/Documents/GitHub/Innovation_project/src/App.js",["88"],[],"/Users/yasirulokesha/Documents/GitHub/Innovation_project/src/reportWebVitals.js",[],[],"/Users/yasirulokesha/Documents/GitHub/Innovation_project/src/Components/Header.js",["89","90"],[],"import { Container, Link, Stack, styled, alpha, InputBase, Button } from \"@mui/material\"\nimport { Logo, SearchBox } from \"./Components\";\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { useState } from \"react\";\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport SearchResults from \"../Pages/SearchResults\";\n\n// Header styles\nconst HeaderContainer = styled('div')(() => ({\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignContent: 'center',\n    alignItems: 'center',\n    marginRight: 'auto',\n    marginLeft: 'auto',\n    height: '100px',\n    flexWrap: \"wrap\"\n}))\n\n// Search\nconst Search = styled('form')(({ theme }) => ({\n    position: 'relative',\n    borderRadius: \"8px\",\n    backgroundColor: alpha(\"#D9D9D9\", 1),\n    '&:hover': {\n        backgroundColor: alpha(\"#D9D9D9\", 0.25),\n    },\n    marginLeft: 0,\n    marginRight: 20,\n    width: '100%',\n    height: '39px',\n    maxWidth: '600px'\n}));\nconst SearchIconWrapper = styled('div')(({ theme }) => ({\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n}));\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\n    color: '#B4B4B4',\n    '& .MuiInputBase-input': {\n        padding: theme.spacing(1, 1, 1, 0),\n        paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n        transition: theme.transitions.create('width'),\n        width: '80%',\n        [theme.breakpoints.up('sm')]: {\n            width: '12ch',\n            '&:focus': {\n                width: '20ch',\n            },\n        },\n\n    },\n}));\n\nexport function Header() {\n    const [keyword, setKeyword] = useState(null)\n\n    const [Resulthandle, setResulthandle] = useState(false)\n\n    const OpenResultDialog = () => {\n        setResulthandle(true)\n    }\n\n    const CloseResultDialog = () => {\n        setResulthandle(false)\n    }\n\n    const handle = (e) => {\n        setKeyword(e.target.value)\n    }\n    const search = (e) => {\n        e.preventDefault();\n        if (keyword != null) {\n            OpenResultDialog()\n        }\n    }\n    return (\n        <Container fixed>\n            <Dialog\n                fullWidth='true'\n                maxWidth='md'\n                open={Resulthandle}\n                onClose={CloseResultDialog}\n                scroll='body'\n            >\n                <DialogTitle>Search Results</DialogTitle>\n                <SearchResults keyword={keyword} />\n                <DialogActions>\n                    <Button onClick={CloseResultDialog}>Close</Button>\n                </DialogActions>\n            </Dialog>\n            <HeaderContainer>\n                <Logo />\n                <Stack flexDirection=\"row\">\n                    <Search onSubmit={search}>\n                        <SearchIconWrapper>\n                            <SearchIcon />\n                        </SearchIconWrapper>\n                        <StyledInputBase\n                            placeholder=\"Searchâ€¦\"\n                            inputProps={{ 'aria-label': 'search' }}\n                            onChange={handle}\n                        />\n                    </Search>\n                    <Link color='#000' href='/profile'>\n                        <AccountCircleIcon fontSize='large' />\n                    </Link>\n                </Stack>\n            </HeaderContainer>\n        </Container>\n    )\n}","/Users/yasirulokesha/Documents/GitHub/Innovation_project/src/Components/Footer.js",[],[],"/Users/yasirulokesha/Documents/GitHub/Innovation_project/src/Components/Components.js",["91"],[],"/Users/yasirulokesha/Documents/GitHub/Innovation_project/src/Pages/Profile.js",["92","93"],[],"/Users/yasirulokesha/Documents/GitHub/Innovation_project/src/Pages/AssestOverview.js",[],[],"/Users/yasirulokesha/Documents/GitHub/Innovation_project/src/Pages/Landing.js",["94","95","96","97"],[],"import { Container, Stack, Typography } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\n\nimport { SubLink, Assest, CustomLink } from '../Components/Components';\n\nimport {\n  Route,\n  Routes\n} from \"react-router-dom\";\n\nimport axios from 'axios'\n\nimport Sample1 from '../Assests/NFTs/NFT00001.jpg'\nimport Sample2 from '../Assests/NFTs/NFT00002.jpg'\nimport Sample3 from '../Assests/NFTs/NFT00003.jpg'\nimport Sample4 from '../Assests/NFTs/NFT00004.jpg'\nimport Sample5 from '../Assests/NFTs/NFT00005.jpg'\nimport Sample6 from '../Assests/NFTs/NFT00006.jpg'\nimport Sample7 from '../Assests/NFTs/NFT00007.jpg'\nimport Sample8 from '../Assests/NFTs/NFT00008.jpg'\nimport Sample9 from '../Assests/NFTs/NFT00009.jpg'\nimport Sample10 from '../Assests/NFTs/NFT00010.jpg'\nimport Sample11 from '../Assests/NFTs/NFT00011.jpg'\nimport Sample12 from '../Assests/NFTs/NFT00012.jpg'\n\n// Create data set for the NFTs\nfunction createData(category, src, name, price) {\n  return { category, src, name, price };\n}\n\n// NFT data array\nexport const Assests = [\n  createData('gaming', Sample1, 'Monkey Dory', '0.121ETH'),\n  createData('art', Sample2, 'Angry Monkey', '0.156ETH'),\n  createData('photography', Sample3, 'Gentle gamer', '0.237ETH'),\n  createData('art', Sample4, 'Funky dirt', '0.456ETH'),\n  createData('art', Sample5, 'Hounerable', '0.135ETH'),\n  createData('gaming', Sample6, 'Thug Life', '0.232ETH'),\n  createData('photography', Sample7, 'Rapper', '0.110ETH'),\n  createData('art', Sample8, 'Super Joke', '0.311ETH'),\n  createData('gaming', Sample9, 'AirSky Joker', '0.745ETH'),\n  createData('art', Sample10, 'Stylish gamer', '0.568ETH'),\n  createData('photography', Sample11, 'Sun Flower', '0.698ETH'),\n  createData('gaming', Sample12, 'Mixed Colours', '0.124ETH'),\n]\n\n// Export the Landing page\nexport default function Landing() {\n  return (\n    <Container fixed>\n      <Typography m=\"10px\" variant='h5'>Explore</Typography>\n      {/* Create routes for filtering purposes */}\n      <Routes>\n        <Route index element={\n          <div>\n            <Stack flexWrap=\"wrap\" direction=\"row\" mb=\"10px\">\n              <SubLink active={true} to=\"/\" placeholder=\"All\" />\n              <SubLink to=\"/future\" placeholder=\"Future\" />\n              <SubLink to=\"/gaming\" placeholder=\"Gaming\" />\n              <SubLink to=\"/art\" placeholder=\"Art\" />\n              <SubLink to=\"/photography\" placeholder=\"Photography\" />\n            </Stack>\n            <All />\n          </div>\n        } >\n        </Route>\n        <Route exact path='/future' element={\n          <div>\n            <Stack flexWrap=\"wrap\" direction=\"row\" mb=\"10px\">\n              <SubLink to=\"/#\" placeholder=\"All\" />\n              <SubLink active={true} to=\"/future\" placeholder=\"Future\" />\n              <SubLink to=\"/gaming\" placeholder=\"Gaming\" />\n              <SubLink to=\"/art\" placeholder=\"Art\" />\n              <SubLink to=\"/photography\" placeholder=\"Photography\" />\n            </Stack>\n            <Future />\n          </div>\n        } />\n        <Route exact path='/gaming' element={\n          <div>\n            <Stack flexWrap=\"wrap\" direction=\"row\" mb=\"10px\">\n              <SubLink to=\"/#\" placeholder=\"All\" />\n              <SubLink to=\"/future\" placeholder=\"Future\" />\n              <SubLink active={true} to=\"/gaming\" placeholder=\"Gaming\" />\n              <SubLink to=\"/art\" placeholder=\"Art\" />\n              <SubLink to=\"/photography\" placeholder=\"Photography\" />\n            </Stack>\n            <Gaming />\n          </div>\n        } />\n        <Route path='/art' element={\n          <div>\n            <Stack flexWrap=\"wrap\" direction=\"row\" mb=\"10px\">\n              <SubLink to=\"/#\" placeholder=\"All\" />\n              <SubLink to=\"/future\" placeholder=\"Future\" />\n              <SubLink to=\"/gaming\" placeholder=\"Gaming\" />\n              <SubLink active={true} to=\"/art\" placeholder=\"Art\" />\n              <SubLink to=\"/photography\" placeholder=\"Photography\" />\n            </Stack>\n            <Art />\n          </div>\n        } />\n        <Route path='/photography' element={\n          <div>\n            <Stack flexWrap=\"wrap\" direction=\"row\" mb=\"10px\">\n              <SubLink to=\"/#\" placeholder=\"All\" />\n              <SubLink to=\"/future\" placeholder=\"Future\" />\n              <SubLink to=\"/gaming\" placeholder=\"Gaming\" />\n              <SubLink to=\"/art\" placeholder=\"Art\" />\n              <SubLink active={true} to=\"/photography\" placeholder=\"Photography\" />\n            </Stack>\n            <Photography />\n          </div>\n        } />\n      </Routes>\n    </Container>\n  )\n}\n\n// Export the all NFT assests into the gallery\nexport function All() {\n  const [data, setData] = useState([])\n\n  useEffect(() => {\n    axios.get('http://127.0.0.1:8000/')\n      .then((response) => {\n        setData(response.data)\n      })\n      .catch(\n        (error) => {\n          console.log(\"Error fetching data\")\n        }\n      )\n  }, [])\n\n  return (\n    <Stack direction=\"row\" useFlexGap flexWrap=\"wrap\" spacing={2}>\n      {data.map((asset, index) => (\n        <CustomLink key={index} element={<Assest src={asset['asset']} name={asset['name']} price={asset['price']} />} to={`/` + asset[\"id\"]} />\n      ))}\n    </Stack>\n  )\n}\n\n// Export the gaming NFTs for the gallery\nexport function Gaming() {\n  const [data, setData] = useState([])\n\n  useEffect(() => {\n    axios.\n      get('http://127.0.0.1:8000/gaming')\n      .then((response) => {\n        setData(response.data)\n      })\n  }, [])\n\n  return (\n    <Stack direction=\"row\" useFlexGap flexWrap=\"wrap\" spacing={2}>\n      {data.map((asset, index) => (\n        <CustomLink key={index} element={<Assest src={asset['asset']} name={asset['name']} price={asset['price']} />} to={`/` + asset[\"id\"]} />\n      ))}\n    </Stack>\n  )\n}\n\n// Export the art NFTs for the gallery\nexport function Art() {\n  const [data, setData] = useState([])\n\n  useEffect(() => {\n    axios.\n      get('http://127.0.0.1:8000/art')\n      .then((response) => {\n        setData(response.data)\n      })\n  }, [])\n\n  return (\n    <Stack direction=\"row\" useFlexGap flexWrap=\"wrap\" spacing={2}>\n      {Array.isArray(data) ? (\n          data.map((asset, index) => (\n            <CustomLink key={index} element={<Assest src={asset['asset']} name={asset['name']} price={asset['price']} />} to={`/` + asset[\"id\"]} />\n          ))\n      ) : (\n        <Typography>Loading...</Typography>\n      )}\n\n    </Stack>\n  )\n}\n\n// Export the photography NFTs for the gallery\nexport function Photography() {\n  const [data, setData] = useState([])\n\n  useEffect(() => {\n    axios.\n      get('http://127.0.0.1:8000/photography')\n      .then((response) => {\n        setData(response.data)\n      })\n  }, [])\n\n  return (\n    <Stack direction=\"row\" useFlexGap flexWrap=\"wrap\" spacing={2}>\n      {Array.isArray(data) ? (\n          data.map((asset, index) => (\n            <CustomLink key={index} element={<Assest src={asset['asset']} name={asset['name']} price={asset['price']} />} to={`/` + asset[\"id\"]} />\n          ))\n      ) : (\n        <Typography>Loading...</Typography>\n      )}\n    </Stack>\n  )\n}\n\n// Export the Future NFTs for the gallery\nexport function Future() {\n  const [data, setData] = useState([])\n\n  useEffect(() => {\n    axios.\n      get('http://127.0.0.1:8000/future')\n      .then((response) => {\n        setData(response.data)\n      })\n  }, [])\n\n  return (\n    <Stack direction=\"row\" useFlexGap flexWrap=\"wrap\" spacing={2}>\n      {Array.isArray(data) ? (\n          data.map((asset, index) => (\n            <CustomLink key={index} element={<Assest src={asset['asset']} name={asset['name']} price={asset['price']} />} to={`/` + asset[\"id\"]} />\n          ))\n      ) : (\n        <Typography>Loading...</Typography>\n      )}\n    </Stack>\n  )\n}","/Users/yasirulokesha/Documents/GitHub/Innovation_project/src/Pages/Login.js",[],[],"/Users/yasirulokesha/Documents/GitHub/Innovation_project/src/Auth.js",[],[],"/Users/yasirulokesha/Documents/GitHub/Innovation_project/src/setupTests.js",[],[],"/Users/yasirulokesha/Documents/GitHub/Innovation_project/src/Pages/CreateAccount.js",[],[],"/Users/yasirulokesha/Documents/GitHub/Innovation_project/src/Components/UploadForm.js",["98","99","100","101"],[],"import axios from 'axios'\n\nimport React, { useState } from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport FormControl from '@mui/material/FormControl';\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\nimport { styled } from '@mui/material/styles';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport IconButton from '@mui/material/IconButton';\nimport { Typography, Stack, TextField, Container } from '@mui/material';\nimport PublishIcon from '@mui/icons-material/Publish';\nimport { useNavigate } from 'react-router-dom';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport Link from '@mui/material/Link';\n\nimport Snackbar from '@mui/material/Snackbar';\nimport MuiAlert from '@mui/material/Alert';\n\nimport { storage } from './Firebase'\nimport { getDownloadURL, ref, uploadBytes } from \"firebase/storage\";\nimport { v4 } from \"uuid\";\n\nconst Alert = React.forwardRef(function Alert(props, ref) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nconst VisuallyHiddenInput = styled('input')({\n    clip: 'rect(0 0 0 0)',\n    clipPath: 'inset(50%)',\n    height: 1,\n    overflow: 'hidden',\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    whiteSpace: 'nowrap',\n    width: 1,\n});\n\nexport default function AssestUpload(props) {\n    const [image, setImage] = useState(null)\n    const [imagePreview, setImagePreview] = useState(null)\n    const [assestName, setAssestName] = useState(null)\n    const [price, setPrice] = useState(null)\n    const [category, setCategory] = useState(null)\n    const username = localStorage.getItem(\"username\")\n    const [ImageURL, setImageURL] = useState(null)\n\n    const [ShowForm, setShowForm] = useState(true)\n\n    const [status, setstatus] = useState(null)\n    const [msg, setmsg] = useState(null)\n    const [snackbarOpen, setSnackbarOpen] = useState(false)\n\n    const SelectAssest = (e) => {\n        const file = e.target.files[0];\n        setImage(file);\n        console.log(image)\n\n        // Create a URL for the uploaded image to display in the preview\n        const reader = new FileReader();\n        reader.onload = () => {\n            setImagePreview(reader.result);\n        };\n        reader.readAsDataURL(file);\n    };\n\n    const upload = async () => {\n        if (image == null || assestName == null || price == null || category == null) {\n            setstatus(\"error\")\n            setmsg(\"Fill the all details !\")\n            setSnackbarOpen(true)\n        } else {\n            const assetRef = ref(storage, `Assets/${v4()}`)\n\n\n            uploadBytes(assetRef, image)\n                .then(() => {\n                    getDownloadURL(assetRef)\n                        .then((url) => {\n                            // setImageURL(url)\n                            axios\n                                .post('http://localhost:8000/upload', {\n                                    asset: url,\n                                    name: assestName,\n                                    owner: username,\n                                    price: price,\n                                    category: category\n                                })\n                                .then(response => {\n                                    // Handle the response from the FastAPI backend\n                                    if (response) {\n                                        if (response.data.msg = \"uploaded\") {\n                                            setstatus(\"success\")\n                                            setmsg(\"Successfully Uploaded!\")\n                                            setSnackbarOpen(true)\n                                            setShowForm(false)\n                                        }\n                                    } else {\n                                        setstatus(\"error\")\n                                        setmsg(\"Error in prccess!\")\n                                        setSnackbarOpen(true)\n                                    }\n                                })\n                                .catch(error => {\n                                    // Handle errors\n                                    setstatus(\"error\")\n                                    setmsg(\"Serverity Error!\")\n                                    setSnackbarOpen(true)\n                                });\n                        })\n                })\n                .catch(() => {\n                    alert(\"failed\")\n                })\n\n\n\n\n        }\n\n\n    }\n\n    return (\n        <Container>\n            {ShowForm ? (\n                <>\n                    <IconButton sx={{ width: 'inherit', m: 'auto', mb: '20px', }} component=\"label\">\n                        {!image ? (\n                            <Stack sx={{\n                                width: 'inherit',\n                                maxWidth: '300pt',\n                                height: '300pt',\n                                display: 'flex',\n                                borderStyle: 'dashed',\n                                borderRadius: '24px',\n                                justifyContent: 'center'\n                            }} alignItems='center'>\n                                <CloudUploadIcon fontSize='large' />\n                                <Typography>Upload Your NFT</Typography>\n                                <DialogContentText>\n                                    Keep using .jpg, .png formats\n                                </DialogContentText>\n                                <VisuallyHiddenInput onChange={SelectAssest} type=\"file\" accept='.jpg,.jpeg,.png' />\n                            </Stack>\n                        ) : (\n                            <img width=\"100%\" src={imagePreview} alt='Uploaded'></img>\n                        )}\n\n                    </IconButton>\n\n                    <Box\n                        noValidate\n                        component=\"form\"\n                        sx={{\n                            display: 'flex',\n                            flexDirection: 'column',\n                            m: 'auto',\n                            width: '100%',\n                        }}\n                    >\n                        <InputLabel>Name</InputLabel>\n                        <TextField\n                            id=\"outlined-multiline-flexible\"\n                            multiline\n                            maxRows={4}\n                            sx={{\n                                marginTop: 1,\n                                marginBottom: 2,\n                            }}\n                            placeholder=\"Assest Name\"\n                            onChange={(e) => { setAssestName(e.target.value) }}\n                        />\n                        <InputLabel>Price</InputLabel>\n                        <TextField\n                            id=\"outlined-multiline-flexible\"\n                            multiline\n                            maxRows={4}\n                            sx={{\n                                marginTop: 1,\n                                marginBottom: 2,\n                            }}\n                            placeholder=\"ETH\"\n                            onChange={(e) => setPrice(e.target.value)}\n                        />\n                        <InputLabel>Category</InputLabel>\n                        <Select\n                            autoFocus\n                            placeholder='NFT Category'\n                            value={category}\n                            onChange={(e) => { setCategory(e.target.value) }}\n                        >\n                            <MenuItem value=\"gaming\">Gaming</MenuItem>\n                            <MenuItem value=\"future\">Future</MenuItem>\n                            <MenuItem value=\"art\">Art</MenuItem>\n                            <MenuItem value=\"photography\">Photography</MenuItem>\n                        </Select>\n                        <Snackbar open={snackbarOpen} autoHideDuration={600} >\n                            <Alert severity={status} sx={{ width: '100%' }} >\n                                <Typography>{msg}</Typography>\n                            </Alert>\n                        </Snackbar>\n                        <FormControl sx={{ mt: 2, maxWidth: 120 }}>\n                            <Button onClick={upload} component=\"label\" variant=\"contained\" startIcon={<PublishIcon />}>\n                                Upload\n                            </Button>\n                        </FormControl>\n                    </Box>\n                </>\n            )\n                : (\n                    <Stack justifyContent='center' alignItems='center' height={300}>\n                        <CheckCircleIcon fontSize='large' color={status} />\n                        <Typography fontWeight={400}>Your NFT uploaded successfully!</Typography>\n                        <Link sx={{\n                            color: '#00aaff',\n                            fontWeight: \"600\",\n                            fontSize: 20,\n                            marginTop: 10\n                        }} underline=\"none\" href=\"/login\" > Go Home\n                        </Link>\n                    </Stack>\n                )}\n\n        </Container>\n    );\n}","/Users/yasirulokesha/Documents/GitHub/Innovation_project/src/Components/Firebase.js",[],[],"/Users/yasirulokesha/Documents/GitHub/Innovation_project/src/Pages/SearchResults.js",["102","103","104","105"],[],"import { Container, Stack } from \"@mui/material\"\nimport axios from \"axios\"\nimport { useEffect, useState } from \"react\"\nimport { Assest, CustomLink } from \"../Components/Components\"\n\nexport default function SearchResults(props) {\n    const [results, setResults] = useState(Array())\n    const key = props.keyword\n    useEffect(() => {\n        axios.\n            get(`http://127.0.0.1:8000/search/?keyword=${key}`)\n            .then((response) => {\n                setResults(response.data);\n                console.log(\"Set\", results);\n            })\n            .catch((error) => {\n                console.error('Error while fetching search results:', error);\n            });\n    }, [key])\n\n    return (\n        <div>\n            <Stack flexWrap='wrap' flexDirection='row'>\n                {results.map((result) => (\n                    <CustomLink element={<Assest src={result['asset']} name={result['name']} price={result['price']} />} to={`/` + result[\"id\"]} />\n                ))}\n            </Stack>\n        </div>\n    )\n}",{"ruleId":"106","severity":1,"message":"107","line":10,"column":19,"nodeType":"108","messageId":"109","endLine":10,"endColumn":26},{"ruleId":"106","severity":1,"message":"110","line":2,"column":16,"nodeType":"108","messageId":"109","endLine":2,"endColumn":25},{"ruleId":"106","severity":1,"message":"111","line":9,"column":8,"nodeType":"108","messageId":"109","endLine":9,"endColumn":21},{"ruleId":"106","severity":1,"message":"112","line":3,"column":45,"nodeType":"108","messageId":"109","endLine":3,"endColumn":56},{"ruleId":"106","severity":1,"message":"113","line":50,"column":7,"nodeType":"108","messageId":"109","endLine":50,"endColumn":21},{"ruleId":"114","severity":1,"message":"115","line":326,"column":14,"nodeType":"116","messageId":"117","endLine":326,"endColumn":15,"fix":"118"},{"ruleId":"114","severity":1,"message":"115","line":150,"column":10,"nodeType":"116","messageId":"117","endLine":150,"endColumn":11,"fix":"119"},{"ruleId":"114","severity":1,"message":"115","line":171,"column":10,"nodeType":"116","messageId":"117","endLine":171,"endColumn":11,"fix":"120"},{"ruleId":"114","severity":1,"message":"115","line":197,"column":10,"nodeType":"116","messageId":"117","endLine":197,"endColumn":11,"fix":"121"},{"ruleId":"114","severity":1,"message":"115","line":222,"column":10,"nodeType":"116","messageId":"117","endLine":222,"endColumn":11,"fix":"122"},{"ruleId":"106","severity":1,"message":"123","line":16,"column":10,"nodeType":"108","messageId":"109","endLine":16,"endColumn":21},{"ruleId":"106","severity":1,"message":"124","line":50,"column":12,"nodeType":"108","messageId":"109","endLine":50,"endColumn":20},{"ruleId":"106","severity":1,"message":"125","line":50,"column":22,"nodeType":"108","messageId":"109","endLine":50,"endColumn":33},{"ruleId":"126","severity":1,"message":"127","line":96,"column":45,"nodeType":"128","messageId":"129","endLine":96,"endColumn":75},{"ruleId":"106","severity":1,"message":"130","line":1,"column":10,"nodeType":"108","messageId":"109","endLine":1,"endColumn":19},{"ruleId":"131","severity":1,"message":"132","line":7,"column":44,"nodeType":"133","messageId":"134","endLine":7,"endColumn":51},{"ruleId":"114","severity":1,"message":"115","line":10,"column":14,"nodeType":"116","messageId":"117","endLine":10,"endColumn":15,"fix":"135"},{"ruleId":"136","severity":1,"message":"137","line":19,"column":8,"nodeType":"138","endLine":19,"endColumn":13,"suggestions":"139"},"no-unused-vars","'Assests' is defined but never used.","Identifier","unusedVar","'SearchBox' is defined but never used.","'DialogContent' is defined but never used.","'FormControl' is defined but never used.","'PrivateAssests' is assigned a value but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"140","text":"141"},{"range":"142","text":"143"},{"range":"144","text":"143"},{"range":"145","text":"143"},{"range":"146","text":"143"},"'useNavigate' is defined but never used.","'ImageURL' is assigned a value but never used.","'setImageURL' is assigned a value but never used.","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","'Container' is defined but never used.","no-array-constructor","The array literal notation [] is preferable.","CallExpression","preferLiteral",{"range":"147","text":"141"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'results'. Either include it or remove the dependency array.","ArrayExpression",["148"],[12022,12036],"\n            .",[5342,5350],"\n      .",[5884,5892],[6546,6554],[7205,7213],[346,360],{"desc":"149","fix":"150"},"Update the dependencies array to be: [key, results]",{"range":"151","text":"152"},[682,687],"[key, results]"]